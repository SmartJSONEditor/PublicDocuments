function sjeClass(){return new ValueTransformer}var ValueTransformer=function(){function getRandomArbitrary(e,a){var t=Math.random()*(a-e)+e;return parseInt(t)}this.displayName="JSON Path List Value",this.shortDescription="Extract key value pairs from json responses or nodes using jsonPath.",this.isEditingDisabled=!0,this.infoUrl="https://github.com/SmartJSONEditor/PublicDocuments/wiki/Token-Value-Transformer",this.parameters=function(e){if(null==e)return[];var a=null,t=DocumentModel.getUserParameterValue("JsonPathList.values");t&&(a=t);var r={name:"dictionary",type:"Dictionary",displayName:"Key : Value list",description:"",userInfo:{keyPlaceholder:"Key",valuePlaceholder:"Value"},tokenScripts:!0};null!==a&&(r.defaultValue=a);var u=[];try{u=DocumentModel.getProjectIdList()}catch(e){u=[]}if(0==u.length){return[{name:"urlSection",type:"Section",displayName:"No Projects found ",description:"You do not have any project nodes yet"}]}for(var s=[],i=0;i<u.length;i++){var l=u[i];s.push({displayName:l.displayName,value:l.projectId,imageName:l.imageName})}return[{name:"mainTabs",type:"Tabs",displayName:"Tabs",defaultValue:[{id:"SELECT",displayName:"Select",parameters:[r]},{id:"SETUP",displayName:"Setup",parameters:[{name:"projectId",type:"Popup",displayName:"Project Identifier",description:"Select Project Identifier",defaultValue:s},{type:"JsonPath",name:"jsonPathKey",displayName:"Key Json Path",description:"Use space to initiate a json path search or use $ to access root element.",placeholder:"Use space to traverse",defaultValue:"",scriptsDisabled:!0,userInfo:{projectIdParameterName:"projectId"}},{type:"JsonPath",name:"jsonPathValue",displayName:"Value Json Path",description:"Use space to initiate a json path search or use $ to access root element.",placeholder:"Use space to traverse",defaultValue:"",scriptsDisabled:!0,userInfo:{projectIdParameterName:"projectId"}},{name:"outputFormat",type:"Popup",displayName:"Output format",description:"Select between key, value or format.",defaultValue:[{displayName:"Using Format",value:"format"},{displayName:"Key",value:"key"},{displayName:"Value",value:"value"}]},{type:"String",name:"format",displayName:"Output string format",description:"Define your output format using %k, %v tokens such %k:%v",defaultValue:"%k=%v",tokenScripts:!0},{type:"String",name:"joiner",displayName:"Join multiple selection items with:",description:"Multiple options join character",defaultValue:"&"},{type:"Segments",name:"output",displayName:"Output",description:"Select how to output the value.",defaultValue:[{displayName:"Prepend",enabled:0},{displayName:"Replace",enabled:1},{displayName:"Append",enabled:0}]}]}],userInfo:{minimalUI:!0}}]},this.transform=function(inputValue,parameters,userInfo){var projectId=parameters.projectId,jsonPathKey=parameters.jsonPathKey,jsonPathValue=parameters.jsonPathValue,outputType=1==Array.isArray(parameters.outputFormat)?"format":parameters.outputFormat,outputFormat=parameters.format||"%k=%v";outputFormat=DocumentModel.getTokensValue(outputFormat,userInfo.projectNode,pluginIdentifier);var joiner=parameters.joiner||"&",keyValueArray=parameters.dictionary||[];if(void 0==projectId||""==projectId)return"Error-Project-id-parameter-is-undefined-x";var keyList=[],valueList=[],keyList=DocumentModel.jsonPath(projectId,jsonPathKey);void 0==keyList&&(keyList=[]),0==keyList.count&&(keyList=[]);var valueList=DocumentModel.jsonPath(projectId,jsonPathValue);void 0==valueList&&(valueList=[]),0==valueList.count&&(valueList=[]);var changeHash=projectId+":"+jsonPathKey+":"+jsonPathValue,lastChangeHash=DocumentModel.getUserParameterValue("JsonPathList.changeHash"),keys=[];if(changeHash!==lastChangeHash||keyValueArray===[]){keyValueArray=[];for(var index in keyList){var itemKey=keyList[index],keyOutput=null;1==itemKey.isContainer?(keyOutput=itemKey.toJavascriptValue(),keyOutput=JSON.stringify(keyOutput)):keyOutput=itemKey.value,keyValueArray.push({key:keyOutput,value:"",enabled:!1})}for(var index in valueList){var itemValue=valueList[index],valueOutput=null;if(1==itemValue.isContainer?(valueOutput=itemValue.toJavascriptValue(),valueOutput=JSON.stringify(valueOutput)):valueOutput=itemValue.value,index<valueList.length){var item=keyValueArray[index];item.value=valueOutput}else keyValueArray.push({key:"",value:valueOutput,enabled:!1})}DocumentModel.setUserParameterValue("JsonPathList.values",keyValueArray),DocumentModel.setUserParameterValue("dictionary",keyValueArray),DocumentModel.setUserParameterValue("JsonPathList.changeHash",changeHash)}var value="",keys=[],values=[];for(var index in keyValueArray){var item=keyValueArray[index];if(!0===item.enabled){keys.push(item.key);var value=DocumentModel.getTokensValue(item.value,userInfo.projectNode,pluginIdentifier);values.push(value)}}var value="";if("key"==outputType&&(value=keys.length>1?keys.join(joiner):keys[0]),"value"==outputType&&(value=values.length>1?values.join(joiner):values[0]),"format"==outputType){var chunks=[];for(var i in keys){var key=keys[i],value=values[i],formatString=outputFormat,replaceKey=formatString.replace(eval("/%k/g"),key),replaceValue=replaceKey.replace(eval("/%v/g"),value);chunks.push(replaceValue)}value=chunks.join(joiner)}return void 0===value&&(value="Error-undefined-value-x"),1==parameters.output[0].enabled?value+inputValue:1==parameters.output[1].enabled?value:1==parameters.output[2].enabled?inputValue+value:"Error-invalid-parameters-x"}};