function sjeClass(){return new ValueTransformer}var ValueTransformer=function(){this.displayName="Timestamp with offset",this.shortDescription="Creates now date string with offset in seconds",this.isEditingDisabled=!0,this.infoUrl="https://github.com/SmartJSONEditor/PublicDocuments/wiki/Token-Value-Transformer",this.parameters=function(e){if(null==e)return[];var a=[{displayName:"Timestamp in seconds | parse() * 1000",value:"timestamp_seconds"},{displayName:"Timestamp in miliseconds | parse()",value:"timestamp_miliseconds"},{displayName:"Mon Jan 01 2000 | toDateString()",value:"toDateString"},{displayName:"2000-01-01T00:00:00.000Z | toISOString()",value:"toISOString"},{displayName:"01/01/2000 | toLocaleDateString()",value:"toLocaleDateString"},{displayName:"Mon Jan 01 200 00:00:00 GMT-00600 (CST) | toString()",value:"toString"},{displayName:"Mon, 01 Jan 2000 00:00:00 GMT | toUTCString()",value:"toUTCString"},{displayName:"Swift DateFormatter Format",value:"dateformatter"}],t={name:"type",type:"Popup",displayName:"Date Output Format",description:"Select date output format.",defaultValue:a},r={type:"Number",name:"offsetSeconds",displayName:"Seconds Offset",description:"Offset in seconds, use negative value for earlier time",defaultValue:0,tokenScripts:!0},i={type:"Number",name:"offsetMinutes",displayName:"Minutes Offset",description:"Offset in minutes, use negative value for earlier time",defaultValue:0,tokenScripts:!0},u={type:"Number",name:"offsetHours",displayName:"Hours Offset",description:"Offset in hours, use negative value for earlier time",defaultValue:0,tokenScripts:!0},n={type:"String",name:"swiftFormatter",displayName:"Swift DateFormatter Format",description:"Using Apple Swift DateFormatter class format string.",defaultValue:"yyyy-MM-dd"},l=[{displayName:"Prepend",enabled:0},{displayName:"Replace",enabled:1},{displayName:"Append",enabled:0}],s={type:"Segments",name:"output",displayName:"Output",description:"Select how to output the value.",defaultValue:l};return[r,i,u,t,n,s]},this.transform=function(e,a,t){var r=1==Array.isArray(a.type)?"timestamp_seconds":a.type,i=0===a.offsetSeconds?0:a.offsetSeconds,u=0===a.offsetMinutes?0:a.offsetMinutes,n=0===a.offsetHours?0:a.offsetHours;i=DocumentModel.getTokensValue(i,t.projectNode,pluginIdentifier),u=DocumentModel.getTokensValue(u,t.projectNode,pluginIdentifier),n=DocumentModel.getTokensValue(n,t.projectNode,pluginIdentifier);var l=void 0===a.swiftFormatter?"":a.swiftFormatter,s=i;s+=60*u,s+=60*n*60;var o,d=new Date((new Date).getTime()+1e3*s);return"timestamp_seconds"==r&&(o=parseInt(Date.parse(d)/1e3)),"timestamp_miliseconds"==r&&(o=Date.parse(d)),"toDateString"==r&&(o=d.toDateString()),"toISOString"==r&&(o=d.toISOString()),"toLocaleDateString"==r&&(o=d.toLocaleDateString()),"toString"==r&&(o=d.toString()),"toUTCString"==r&&(o=d.toUTCString()),"dateformatter"==r&&(o=DocumentModel.dateTimeString(l,parseInt(Date.parse(d)/1e3))),1==a.output[0].enabled?o+e:1==a.output[1].enabled?o:1==a.output[2].enabled?e+o:"Error"}};