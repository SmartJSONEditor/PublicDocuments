function sjeClass(){return new ValueTransformer}var ValueTransformer=function(){this.displayName="Request Parameter List",this.shortDescription="Return values of any request parameters",this.isEditingDisabled=!0,this.infoUrl="https://github.com/SmartJSONEditor/PublicDocuments/wiki/Token-Value-Transformer",this.parameters=function(e){if(null==e)return[];var a=DocumentModel.getUserParameterValue("popup"),r=[];try{r=DocumentModel.getAllParameterNames(a,e.projectNode,pluginIdentifier)}catch(t){}var u=[{displayName:"Request Headers",value:"headers"},{displayName:"Request URL Parameters",value:"urlParameters"},{displayName:"Request Body Parameters",value:"bodyParameters"},{displayName:"Request Variables",value:"variables"},{displayName:"Request Method",value:"method"},{displayName:"Request URL (No URL Encoding)",value:"url"},{displayName:"Request URL & URL Parameters (No URL Encoding)",value:"fullUrl"}],l={name:"popup",type:"Popup",displayName:"Request Parameter Type",description:"Select Parameter Type, use Refresh button to actualize values.",defaultValue:u},i=DocumentModel.getUserParameterValue("selectionlist");if(null==i||0==i.length){var i=[];for(var s in r){var n=r[s];if(n){var o={value:n,enabled:!1};i.push(o)}}}var p={name:"selectionlist",type:"Multiselection",displayName:"Include Parameters",description:"Use Refresh button to refetch updated definitions, plugin cache its keys.",userInfo:{valuePlaceholder:"Value",refreshButton:!0},tokenScripts:!0,defaultValue:i},d={type:"String",name:"format",displayName:"Output string format",description:"Define your output format using %k, %v tokens such %k:%v",defaultValue:"%k=%v",tokenScripts:!0},m={type:"String",name:"joiner",displayName:"Join multiple items with:",description:"Multiple options join character",defaultValue:"&"},v=[{displayName:"No Sort",value:"none"},{displayName:"Sort by Key:Value Alphabethically",value:"alphabethical"}],c={name:"sort",type:"Popup",displayName:"Sort Parameters",description:"Sort Parameters",defaultValue:v},y={name:"urlencode",type:"Bool",displayName:"URL Encode values",description:"Enable to URL encode values",defaultValue:!1},f=[{displayName:"Prepend",enabled:0},{displayName:"Replace",enabled:1},{displayName:"Append",enabled:0}],h={type:"Segments",name:"output",displayName:"Output",description:"Prepend, replace or append value.",defaultValue:f};if(null==r||0==r.length){var N={name:"listSection",type:"Section",displayName:"No Values Found",description:"Current request has no parameters defined for type."};return[l,N,h]}return[l,p,d,m,c,y,h]},this.transform=function(inputValue,parameters,userInfo){var type=parameters.popup;if(void 0==type||""==type)return"Error-no-type-value-x";var outputType=1==Array.isArray(parameters.outputFormat)?"format":parameters.outputFormat,outputFormat=parameters.format||"%k=%v";outputFormat=DocumentModel.getTokensValue(outputFormat,userInfo.projectNode,pluginIdentifier);var joiner=parameters.joiner||"&",sortType=parameters.sort||"none",urlEncode=parameters.urlencode,keyArray=parameters.selectionlist||[],enabledKeysArray=[];for(var index in keyArray){var item=keyArray[index];item.enabled===!0&&enabledKeysArray.push(item.value)}var allParameters=DocumentModel.getAllParameterValues(type,enabledKeysArray,userInfo.projectNode,pluginIdentifier);if(null==allParameters||0==allParameters.length)return"";var value="",chunks=[];if("alphabethical"==sortType){var keys=Object.keys(allParameters);keys.sort();for(var i=0;i<keys.length;i++){var key=keys[i],value=allParameters[key];urlEncode===!0&&(value=DocumentModel.urlEncode(value));var formatString=outputFormat,replaceKey=formatString.replace(eval("/%k/g"),key),replaceValue=replaceKey.replace(eval("/%v/g"),value);chunks.push(replaceValue)}}else for(var propertyName in allParameters){var key=propertyName,value=allParameters[key];urlEncode===!0&&(value=DocumentModel.urlEncode(value));var formatString=outputFormat,replaceKey=formatString.replace(eval("/%k/g"),key),replaceValue=replaceKey.replace(eval("/%v/g"),value);chunks.push(replaceValue)}return value=chunks.join(joiner),1==parameters.output[0].enabled?value+inputValue:1==parameters.output[1].enabled?value:1==parameters.output[2].enabled?inputValue+value:"Error-invalid-parameters-x"}};